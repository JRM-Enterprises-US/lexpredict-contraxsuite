# Generated by Django 2.2.10 on 2020-03-23 15:51

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, connection, transaction

from apps.common.sql_commons import dropping_constraints_and_indexes, maintenance_work_mem


def do_update(apps, schema_editor):
    AppVar = apps.get_model('common', 'AppVar')
    try:
        pg_full_text_search_locale = AppVar.objects.get(name='pg_full_text_search_locale').value
    except:
        pg_full_text_search_locale = 'english'

    with transaction.atomic():
        with connection.cursor() as cursor:
            with dropping_constraints_and_indexes(cursor, 'document_textunittext', logger_proc=lambda s: print(s)):
                with maintenance_work_mem(cursor, logger_proc=lambda s: print(s)):
                    cursor.execute("""
UPDATE document_textunittext 
SET text_tsvector=to_tsvector('pg_catalog.{}', left(text, 1024*1024/2)); 
                    """.format(pg_full_text_search_locale, ))


class Migration(migrations.Migration):
    dependencies = [
        ('document', '0187_auto_20200318_1430'),
    ]

    operations = [
        migrations.RunSQL(
            "ALTER TABLE document_textunittext ADD COLUMN IF NOT EXISTS text_tsvector tsvector;",
            state_operations=[
                migrations.AddField(
                    model_name='textunittext',
                    name='text_tsvector',
                    field=django.contrib.postgres.search.SearchVectorField(null=True)
                ),
            ],
        ),
        migrations.RunPython(
            do_update,
            reverse_code=migrations.RunPython.noop
        ),
        migrations.AddIndex(
            model_name='textunittext',
            index=django.contrib.postgres.indexes.GinIndex(fields=['text'], name='idx_dtut_text_gin',
                                                           opclasses=['gin_trgm_ops']),
        ),
    ]
